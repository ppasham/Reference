<Project Sdk="Microsoft.NET.Sdk">

  <!-- 
  Because this is a multi-targeted project/solution, run tests from the command line
  with the current working directory set to the location of this csproj. As of Sept 2018
  the VS2017 IDE (v15.8.3) will only run a .NET Core test, there is no way to run
  the .NET Framework test from the IDE.
  
  dotnet test [dash dash]framework net452
  dotnet test [dash dash]framework netcoreapp2.0
  
  (XML doesn't allow double-dashes in comments...)
  -->

  <PropertyGroup>
    <TargetFrameworks>netcoreapp2.0;net452</TargetFrameworks>
    <TargetFrameworks Condition=" '$(OS)' != 'Windows_NT' ">netstandard2.0</TargetFrameworks>
    <AssemblyName>Serilog.Sinks.MSSqlServer.Tests</AssemblyName>
    <AssemblyOriginatorKeyFile>../../assets/Serilog.snk</AssemblyOriginatorKeyFile>
    <SignAssembly>true</SignAssembly>
    <PublicSign Condition=" '$(OS)' != 'Windows_NT' ">true</PublicSign>
    <PackageId>Serilog.Sinks.MSSqlServer.Tests</PackageId>
    <GenerateRuntimeConfigurationFiles>true</GenerateRuntimeConfigurationFiles>
    <RuntimeIdentifiers>win</RuntimeIdentifiers>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\src\Serilog.Sinks.MSSqlServer\Serilog.Sinks.MSSqlServer.csproj" />
    <PackageReference Include="FluentAssertions" Version="5.4.1" />
    <PackageReference Include="Dapper.StrongName" Version="1.50.5" />
    <DotNetCliToolReference Include="dotnet-xunit" Version="2.3.0" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="15.8.0" />
    <PackageReference Include="System.Diagnostics.Debug" Version="4.3.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Ensure MSBuild ignores all build-target-specific files by default -->
    <Compile Remove="Configuration\**\*.*" />
    <!-- Show in VStudio, but MSBuild ignores these (indicates files are not code, non-published-content, etc.) -->
    <None Include="Configuration\**\*.*" />
    <!-- ItemGroups below with TFM conditions will re-include the compile targets -->
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net452' ">
    <Reference Include="System" />
    <Reference Include="Microsoft.CSharp" />
    <PackageReference Include="xunit" Version="2.4.0" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.4.0" />
    <Compile Include="Configuration\System.Configuration\**\*.cs" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'netcoreapp2.0' ">
    <PackageReference Include="System.Collections" Version="4.3.0" />
    <PackageReference Include="System.Runtime.InteropServices" Version="4.3.0" />
    <PackageReference Include="System.Runtime.Extensions" Version="4.3.0" />
    <PackageReference Include="System.IO.FileSystem.Primitives" Version="4.3.0" />
    <PackageReference Include="System.Resources.ResourceManager" Version="4.3.0" />
    <PackageReference Include="System.Text.Encoding.Extensions" Version="4.3.0" />
    <PackageReference Include="xunit" Version="2.4.0" />
    <PackageReference Include="xunit.core" Version="2.4.0" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.4.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <Compile Include="Configuration\Microsoft.Extensions.Configuration\**\*.cs" />
  </ItemGroup>

  <ItemGroup>
    <None Update="App.config">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>

</Project>
